---
title: "Model behaviour seconds Before <> After"
author: "Andreas Eich"
format: html
editor: visual
bibliography: references.bib
---

### Libraries

```{r}
library(here) # easier paths, here() function starts in the folder of the RStudio project
library(tidyverse)
library(brms)
library(tidybayes)
library(ggtern)
library(kableExtra)
library(janitor)

# get custom functions
source(here("scripts/functions.R"))
```

### Get data

```{r}
dat_sec_be_af <- readRDS(here("data/clean/dat_before_after.rds"))
```

Calculate total observation time

```{r}
dat_sec_be_af <- dat_sec_be_af %>%
  mutate(total_obs_sec = circling_time_sec + 
           investigating_time_sec + 
           passing_time_sec + 
           feeding_time_sec)

dat_sec_be_af <- dat_sec_be_af %>% 
  mutate(log_n_frame_total = log(n_frame_total),
         log_depth = log(depth))
```

Divide into small&medium and large data set

```{r}
dat_sec_be_af_SM <- dat_sec_be_af %>% 
  filter(size_class != ">100") %>% 
  droplevels()

dat_sec_be_af_L <- dat_sec_be_af %>% 
  filter(size_class == ">100") %>% 
  droplevels()
```

### Overviews

Overview table

```{r}
dat_sec_be_af %>%
  group_by(size_class, year, treatment) %>%
  summarise(n_total = n(),
            sec_observed = mean(total_obs_sec, na.rm = T) %>%
              round(2)) %>%
  #select relevant columns
  select(treatment, n_total, sec_observed) %>%
  #replace NAs with 0s
  replace(is.na(.), 0) %>%
  ungroup() %>%
  # group HTML table by size classes
  select(-size_class) %>%
  nice_table() %>%
  pack_rows("<50", 1, 4) %>%
  pack_rows("50-100", 5, 8) %>%
  pack_rows(">100", 9, 12)
```

Plot raw data

```{r}
dat_sec_be_af %>%
  group_by(size_class, treatment, year) %>%
  summarise(
    total_obs_sec_mean = mean(total_obs_sec, na.rm = T),
    sd = sd(total_obs_sec, na.rm = T),
    n = n(),
    se = ifelse(n >= 3, sd / sqrt(n), NA)
  ) %>%
  ggplot() +
  geom_errorbar(aes(
    x = treatment,
    ymin = total_obs_sec_mean - se,
    ymax = total_obs_sec_mean + se,
    col = factor(treatment),
    width = .4
  )) +
  geom_point(aes(
    x = treatment,
    y = total_obs_sec_mean,
    col = factor(treatment)
  )) +
  facet_grid(year ~ size_class , scales = "free") +
  theme_clean()
```

#### Small & medium fish

```{r}
fit_sec_be_af_SM <- brm(
  total_obs_sec ~ factor(year) * treatment * size_class +
    s(log_n_frame_total) +
    habitat +
    s(log_depth) +
    (1 | video),
  data = dat_sec_be_af_SM,
  family = Gamma(link = "log"),
  prior = c(
    prior(normal(0, 2), class = "Intercept"),
    prior(normal(0, 2), class = "b"),
    prior(gamma(0.01, 0.01), class = "shape")
  ),
  control = list(max_treedepth = 12, adapt_delta = 0.98),
  iter = 4000,
  warmup = 2000,
  chains = 4,
  cores = 4,
  seed = 123,
  file_refit = "on_change",
  file = here("models/fit_sec_be_af_SM"),
  threads = threading(2, static = T),
  backend = "cmdstanr"
)
  
summary(fit_sec_be_af_SM)#30 divergent transitions
pp_check(fit_sec_be_af_SM, ndraws = 100)
bayes_R2(fit_sec_be_af_SM)#0.19
```

Get predicted draws

```{r}
pred_sec_be_af_SM <-  predicted_draws(
  fit_sec_be_af_SM,
  newdata = expand_grid(
    year = dat_sec_be_af_SM$year %>% unique(),
    treatment = dat_sec_be_af_SM$treatment %>% unique(),
    size_class = c("<50", "50-100"),
    habitat = dat_sec_be_af_SM$habitat %>% unique(),
    log_depth = mean(dat_sec_be_af_SM$depth) %>% 
      log(),
    log_n_frame_total = mean(dat_sec_be_af_SM$n_frame_total) %>%
      log()
  ),
  re_formula = NA
)
```

Plots

```{r}
cols_treat <- c("#FFDB6D", "#4E84C4")

pred_sec_be_af_SM %>%
  ggplot(aes(x = .prediction, y = year)) +
  stat_slab(size = .3,
            aes(fill = treatment),
            slab_size = 0.5, 
            alpha = 0.3) +
  stat_slab(show.legend = F, 
            size = .3,
            fill = NA, 
            aes(colour = treatment), 
            slab_size = 0.5) +
  scale_colour_manual(values = cols_treat)+
  scale_fill_manual(values = cols_treat)+
  guides(color = guide_legend(override.aes = list(alpha = 1)),
         fill = guide_legend(override.aes = list(alpha = 1)))+
  facet_grid( ~ size_class)+
  theme_clean()
```

Only by year

```{r}
cols_year <- c("#52854C", "#D16103")


pred_sec_be_af_SM %>%
  ggplot(aes(x = .prediction, y = 1)) +
  stat_slab(size = .3,
            aes(fill = year),
            slab_size = 0.5, 
            alpha = 0.3) +
  stat_slab(show.legend = F, 
            size = .3,
            fill = NA, 
            aes(colour = year), 
            slab_size = 0.5) +
  scale_colour_manual(values = cols_year)+
  scale_fill_manual(values = cols_year)+
  guides(color = guide_legend(override.aes = list(alpha = 1)),
         fill = guide_legend(override.aes = list(alpha = 1)))+
  facet_grid( ~ size_class)+
  theme_clean()
```

Prediction (i.e. actual predicted values for new population) =\> No difference

Expected values (ignoring the variability)

```{r}
epred_sec_be_af_SM <-  epred_draws(
  fit_sec_be_af_SM,
  newdata = expand_grid(
    year = dat_sec_be_af$year %>% unique(),
    treatment = dat_sec_be_af_SM$treatment %>% unique(),
    size_class = c("<50", "50-100"),
    habitat = dat_sec_be_af_SM$habitat %>% unique(),
    log_depth = mean(dat_sec_be_af_SM$depth) %>% 
      log(),
    log_n_frame_total = mean(dat_sec_be_af_SM$n_frame_total) %>%
      log()
  ),
  re_formula = NA
)
```

```{r}
epred_sec_be_af_SM %>%
  ggplot(aes(x = .epred, y = year)) +
  stat_slab(size = .3,
            aes(fill = treatment),
            slab_size = 0.5, 
            alpha = 0.3) +
  stat_slab(show.legend = F, 
            size = .3,
            fill = NA, 
            aes(colour = treatment), 
            slab_size = 0.5) +
  scale_colour_manual(values = cols_treat)+
  scale_fill_manual(values = cols_treat)+
  guides(color = guide_legend(override.aes = list(alpha = 1)),
         fill = guide_legend(override.aes = list(alpha = 1)))+
  facet_grid( ~ size_class)+
  theme_clean()
```

Effect of treatment and year

```{r}
epred_sec_be_af_SM_effect_treat_year <- epred_sec_be_af_SM %>%
  ungroup() %>%
  dplyr::select(year,
                treatment,
                .draw,
                .epred,
                size_class,
                habitat,
                log_n_frame_total,
                log_depth) %>%
  pivot_wider(names_from = treatment, values_from = .epred) %>%
  mutate(diff = before - after)
```

```{r}
epred_sec_be_af_SM_effect_treat_year %>% 
  ggplot(aes(x = diff, y = 1)) +
  geom_vline(xintercept = 0, linetype = "11", col = "grey")+
  stat_slab(alpha = 0.3, aes(fill = factor(year))) +
  stat_slab(show.legend = F,size = .5,  fill = NA ,  aes(col = factor(year))) +
  scale_colour_manual(values = cols_year) +
  scale_fill_manual(values = cols_year) +
  guides(color = guide_legend(override.aes = list(alpha = 1)),
         fill = guide_legend(override.aes = list(alpha = 1))) +
  facet_grid( ~ size_class, scales = "free")+
  theme_clean()
```

```{r}
epred_sec_be_af_SM_effect_treat_year %>% 
  compare_0(variable = diff,
          size_class, year)
```

Minimal impact for medium fish in 2016: less obs time in before shark arrival than after

Impact only year

```{r}
epred_sec_be_af_SM_effect_year <- epred_sec_be_af_SM %>%
  ungroup() %>% 
  dplyr::select(year, treatment, .draw, .epred, size_class, habitat, log_n_frame_total, log_depth) %>% 
  pivot_wider(names_from = year, values_from = .epred) %>%
  clean_names() %>% 
   mutate(diff = x2016 - x2004)
```

```{r}
epred_sec_be_af_SM_effect_year %>% 
  ggplot(aes(x = diff, y = size_class)) +
  geom_vline(xintercept = 0, linetype = "11", col = "grey")+
  stat_slab(alpha = 0.3, aes(fill = factor(size_class))) +
  stat_slab(show.legend = F,size = .5,  fill = NA ,  aes(col = factor(size_class))) +
  theme_clean()
```

```{r}
epred_sec_be_af_SM_effect_year %>% 
  compare_0(variable = diff,
          size_class)
```

No effect

Impact only treatment

```{r}
epred_sec_be_af_SM_effect_treat <- epred_sec_be_af_SM %>%
  ungroup() %>%
  dplyr::select(year,
                treatment,
                .draw,
                .epred,
                size_class,
                habitat,
                log_n_frame_total,
                log_depth) %>%
  pivot_wider(names_from = treatment, values_from = .epred) %>%
  mutate(diff = after - before)
```

```{r}
epred_sec_be_af_SM_effect_treat %>% 
  ggplot(aes(x = diff, y = size_class)) +
  geom_vline(xintercept = 0, linetype = "11", col = "grey")+
  stat_slab(alpha = 0.3, aes(fill = factor(size_class))) +
  stat_slab(show.legend = F,size = .5,  fill = NA ,  aes(col = factor(size_class))) +
  theme_clean()
```

```{r}
epred_sec_be_af_SM_effect_treat %>% 
  compare_0(variable = diff,
          size_class)
```

No impact

Impact depth

```{r}
epred_sec_be_af_SM_depth <-  epred_draws(
  fit_sec_be_af_SM,
  newdata = expand_grid(
    year = dat_sec_be_af_SM$year %>% unique(),
    treatment = dat_sec_be_af_SM$treatment %>% unique(),
    size_class = c("<50", "50-100"),
    habitat = dat_sec_be_af_SM$habitat %>% unique(),
    log_depth = seq(
      min(dat_sec_be_af_SM$log_depth),
      max(dat_sec_be_af_SM$log_depth),
      length = 100
    ),
    log_n_frame_total = mean(dat_sec_be_af$n_frame_total) %>%
      log()
  ),
  re_formula = NA
)

epred_sec_be_af_SM_depthS <- epred_sec_be_af_SM_depth %>% 
  group_by(log_depth) %>% 
  summarise(median = median(.epred),
            l_66 = quantile(.epred, probs = (1-0.66)/2),
            u_66 = quantile(.epred, probs = 1 - (1-0.66)/2),
            l_89 = quantile(.epred, probs = (1-0.89)/2),
            u_89 = quantile(.epred, probs = 1-(1-0.89)/2),
            l95 = quantile(.epred, 0.025, na.rm = T),
            u95 = quantile(.epred, 0.975, na.rm = T),
      )

epred_sec_be_af_SM_depthS %>%
  ggplot(aes(x = log_depth))+
  geom_hline(yintercept = 0, linetype = "11", col = "grey")+
  geom_ribbon(aes(ymin = l_89, ymax = u_89), alpha = .3)+
  geom_line(aes(y = median), linewidth = 1, show.legend = F)+
   geom_point(data = dat_sec_be_af %>% 
               filter(size_class != ">100"),
             aes(y = total_obs_sec))+
  theme_clean()
```

Impact of number of fish in frame

```{r}

epred_sec_be_af_SM_nframe <-  epred_draws(
  fit_sec_be_af_SM,
  newdata = expand_grid(
    year = dat_sec_be_af_SM$year %>% unique(),
    treatment = dat_sec_be_af_SM$treatment %>% unique(),
    size_class = c("<50", "50-100"),
    habitat = dat_sec_be_af_SM$habitat %>% unique(),
    log_depth =  mean(dat_sec_be_af_SM$depth) %>%
      log(),
    log_n_frame_total = seq(
      min(dat_sec_be_af_SM$log_n_frame_total),
      max(dat_sec_be_af_SM$log_n_frame_total),
      length = 100
    )),
  re_formula = NA
)

epred_sec_be_af_SM_nframeS <- epred_sec_be_af_SM_nframe %>% 
  group_by(log_n_frame_total) %>% 
  summarise(median = median(.epred),
            l_66 = quantile(.epred, probs = (1-0.66)/2),
            u_66 = quantile(.epred, probs = 1 - (1-0.66)/2),
            l_89 = quantile(.epred, probs = (1-0.89)/2),
            u_89 = quantile(.epred, probs = 1-(1-0.89)/2),
            l95 = quantile(.epred, 0.025, na.rm = T),
            u95 = quantile(.epred, 0.975, na.rm = T),
      )

epred_sec_be_af_SM_nframeS %>%
  ggplot(aes(x = log_n_frame_total))+
  geom_hline(yintercept = 0, linetype = "11", col = "grey")+
  geom_ribbon(aes(ymin = l_89, ymax = u_89), alpha = .3)+
  geom_line(aes(y = median), linewidth = 1, show.legend = F)+
   geom_point(data = dat_sec_be_af %>% 
               filter(size_class != ">100"),
             aes(y = total_obs_sec))+
  theme_clean()
```

Impact of habitat

```{r}
epred_sec_be_af_SM %>%
  ggplot(aes(x = .epred, y = treatment)) +
  stat_slab(size = .3,
            aes(fill = habitat),
            slab_size = 0.5, 
            alpha = 0.3) +
  stat_slab(show.legend = F, 
            size = .3,
            fill = NA, 
            aes(colour = habitat), 
            slab_size = 0.5) +
  guides(color = guide_legend(override.aes = list(alpha = 1)),
         fill = guide_legend(override.aes = list(alpha = 1)))+
  facet_grid(year ~ size_class )+
  theme_clean()
```

```{r}
epred_sec_be_af_SM %>%
  ggplot(aes(x = .epred, y = 1)) +
  stat_slab(size = .3,
            aes(fill = habitat),
            slab_size = 0.5, 
            alpha = 0.3) +
  stat_slab(show.legend = F, 
            size = .3,
            fill = NA, 
            aes(colour = habitat), 
            slab_size = 0.5) +
  guides(color = guide_legend(override.aes = list(alpha = 1)),
         fill = guide_legend(override.aes = list(alpha = 1)))+
  theme_clean()
```

No real impact

#### Large fish

A less complex model has to be used because number of observations low. Smoothing cannot be used because number of covariate combinations is too low

```{r}
fit_sec_be_af_L <- brm(
  total_obs_sec ~ factor(year) * treatment +
    log_n_frame_total +
    habitat +
    log_depth +
    (1 | video),
  data = dat_sec_be_af_L,
  family = Gamma(link = "log"),
  prior = c(
    prior(normal(0, 2), class = "Intercept"),
    prior(normal(0, 2), class = "b"),
    prior(gamma(0.01, 0.01), class = "shape")
  ),
  control = list(max_treedepth = 12, adapt_delta = 0.98),
  iter = 4000,
  warmup = 2000,
  chains = 4,
  cores = 4,
  seed = 123,
  file_refit = "on_change",
  file = here("models/fit_sec_be_af_L"),
  threads = threading(2, static = T),
  backend = "cmdstanr"
)
```

```{r}
summary(fit_sec_be_af_L)#ok
pp_check(fit_sec_be_af_L, ndraws = 100)
bayes_R2(fit_sec_be_af_L)#0.4
```

```{r}
epred_sec_be_af_L <-  epred_draws(
  fit_sec_be_af_L,
  newdata = expand_grid(
    year = dat_sec_be_af_L$year %>% unique(),
    treatment = dat_sec_be_af_L$treatment %>% unique(),
    habitat = dat_sec_be_af_L$habitat %>% unique(),
    log_depth = mean(dat_sec_be_af_L$depth) %>%
      log(),
    log_n_frame_total = mean(dat_sec_be_af_L$n_frame_total) %>%
      log()
  ),
  re_formula = NA
) %>%
  mutate(size_class = ">100")
```

```{r}
epred_sec_be_af_L %>%
  ggplot(aes(x = .epred, y = year)) +
  stat_slab(size = .3,
            aes(fill = treatment),
            slab_size = 0.5, 
            alpha = 0.3) +
  stat_slab(show.legend = F, 
            size = .3,
            fill = NA, 
            aes(colour = treatment), 
            slab_size = 0.5) +
  scale_colour_manual(values = cols_treat)+
  scale_fill_manual(values = cols_treat)+
  theme_clean()
```

Nope
