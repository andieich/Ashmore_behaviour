---
s---
title: "Model behaviour fractions Absent <> After"
author: "Andreas Eich"
format: html
editor: visual
bibliography: references.bib
---

### Libraries

```{r}
library(here) # easier paths, here() function starts in the folder of the RStudio project
library(tidyverse)
library(brms)
library(tidybayes)
library(ggtern)
library(kableExtra)
library(janitor)
library(bayesplot)
library(emmeans)
library(marginaleffects)
library(htmlTable)

# get custom functions
source(here("scripts/functions.R"))
```

### Get data

```{r}
dat_frac <- readRDS(here("data/clean/clean_data.rds"))
```

-   Make long data frame

```{r}
dat_fracL <- dat_frac %>%
  pivot_longer(frac_investigating_circling:frac_feeding, 
               names_to = "type", 
               values_to = "frac") %>% 
    mutate(type = recode(type,
                       "frac_feeding" = "Feeding",
                       "frac_passing" = "Passing",
                       "frac_investigating_circling" = "Investigating-Circling"))

dat_fracL_SM <- dat_fracL %>%
  filter(size_class != "Large") %>% 
  droplevels()

dat_fracL_L <- dat_fracL %>%
  filter(size_class == "Large") %>% 
  droplevels()
```

### Plot raw data

2004

```{r}
dat_fracL %>% 
  filter(year == 2004) %>% 
  group_by(type, shark_in_video, size_class, year) %>% 
  summarise(frac_mean = mean(frac, na.rm = T),
            sd = sd(frac, na.rm = T),
            n = n(),
            se = ifelse(n >=3, sd / sqrt(n), NA)) %>% 
  ggplot()+
  geom_errorbar(aes(x = shark_in_video, 
                    ymin = frac_mean - se, 
                    ymax = frac_mean + se, 
                    col = factor(shark_in_video),
                    width = .4))+
  geom_point(aes(x = shark_in_video, 
                    y = frac_mean, 
                    col = factor(shark_in_video)))+
  facet_grid(type ~size_class , scales = "free")+
  ggtitle("2004")+
  theme_clean()
```

2016

```{r}
dat_fracL %>% 
  filter(year == 2016) %>% 
  group_by(type, shark_in_video, size_class, year) %>% 
  summarise(frac_mean = mean(frac, na.rm = T),
            sd = sd(frac, na.rm = T),
            n = n(),
            se = ifelse(n >=3, sd / sqrt(n), NA)) %>% 
  ggplot()+
  geom_errorbar(aes(x = shark_in_video, 
                    ymin = frac_mean - se, 
                    ymax = frac_mean + se, 
                    col = factor(shark_in_video),
                    width = .4))+
  geom_point(aes(x = shark_in_video, 
                    y = frac_mean, 
                    col = factor(shark_in_video)))+
  facet_grid(type ~size_class , scales = "free")+
  ggtitle("2016")+
  theme_clean()
```

### Model

#### Prepare data

Divide into small&medium and large size class data set and transform after @douma2019 to replace 1 and 0 values

```{r}
dat_frac_SM <- dat_frac %>% 
  filter(size_class != "Large") %>% 
  droplevels() %>% 
  mutate(frac_investigating_circlingT = transformD(frac_investigating_circling),
         frac_passingT = transformD(frac_passing),
         frac_feedingT = transformD(frac_feeding))
  
dat_frac_L <- dat_frac %>% 
  filter(size_class == "Large") %>% 
  droplevels() %>% 
  mutate(frac_investigating_circlingT = transformD(frac_investigating_circling),
         frac_passingT = transformD(frac_passing),
         frac_feedingT = transformD(frac_feeding))
```

#### Small & Medium Fish

Fit model Small an Medium size class

```{r}
fit_frac_SM <- brm(
  bf(
    cbind(frac_investigating_circlingT, frac_passingT, frac_feedingT) ~
      year * shark_in_video * size_class +
      s(log_n_frame_total) +
      habitat +
      s(log_depth) +
      (1 | video),
    phi ~ year * shark_in_video * size_class
  ),
  data = dat_frac_SM,
  family =  dirichlet(),
  control = list(max_treedepth = 12, adapt_delta = 0.99),
  iter = 4000,
  warmup = 2000,
  chains = 4,
  cores = 4,
  seed = 123,
  file_refit = "on_change",
  threads = threading(2, static = T),
  file = here("models/fit_frac_SM"),
  backend = "cmdstanr"
)

```

```{r}
summary(fit_frac_SM)# Rhat OK
#plot(fit_frac_SM) # ok
```

Get R2 value per category

```{r}
#dirichlet_r2(fit_frac_SM)# takes some time
```

frac_investigating_circlingT 0.22651839\
frac_passingT 0.23909775\
frac_feedingT 0.06776803

Quickly plot results, no interactios

```{r}
#conditional_effects(fit_frac_SM, categorical = T)
```

##### Plot Results for year shark_in_video size_class

Not yet possible with `emmeans` , get expected values manually

```{r}
epred_frac_SM <-  epred_draws(
  fit_frac_SM,
  newdata = expand_grid(
    year = dat_frac_SM$year %>% unique(),
    shark_in_video = dat_frac_SM$shark_in_video %>% unique(),
    size_class = c("Small", "Medium"),
    habitat = dat_frac_SM$habitat %>% unique(),
    log_depth = mean(dat_frac_SM$depth) %>%
      log(),
    log_n_frame_total = mean(dat_frac_SM$n_frame_total) %>%
      log()
  ),
  re_formula = NA
) %>%
  #average over habitat
  group_by(year,
           shark_in_video,
           size_class,
           log_depth,
           log_n_frame_total,
           .category,
           .draw) %>%
  summarise(.epred = mean(.epred)) %>%
  rename("type" = ".category") %>%
  mutate(
    type = recode(
      type,
      "frac_feedingT" = "Feeding",
      "frac_passingT" = "Passing",
      "frac_investigating_circlingT" = "Investigating-Circling"
    )
  )
```

Plot

```{r}
plot_frac_SM <- ggplot(data = epred_frac_SM, 
                                 aes(x = year, 
                                     col = paste(shark_in_video, size_class, sep = "_"))) +
  geom_point(
    data = dat_fracL_SM,
    aes(y = frac),
    position =  position_jitterdodge(jitter.width = .2, dodge.width = .7),
    alpha = .1,
    size = 3,
    stroke = 0
  ) +
  stat_pointinterval(
    aes(y = .epred),
    point_interval = mode_hdi,
    .width = c(.95, .89),
    position = position_dodge(width = .7),
    show.legend = F
  ) +
  scale_colour_manual(values = cols_sharks,
                      labels = c("absent", "absent", "present", "present")) +
  guides(color = guide_legend(override.aes = list(alpha = 1), title = "Shark")) +
  labs(x = NULL, y = "Fraction") +
  facet_grid(factor(size_class, levels = c("Small", "Medium")) ~ type, scales = "free") +
  theme_clean(); plot_frac_SM
```

Save

```{r}
ggsave(filename = "bahavior_fractions_SM.pdf",
       plot = plot_frac_SM, 
       path = here("plots"),
       width = 18, height = 12, units = "cm")
```

As tenary plot

```{r}

plot_fractions_tenary_SM <- epred_frac_SM %>%
  pivot_wider(names_from = type, values_from = .epred) %>%
  ggtern(aes(x = `Investigating-Circling`, y = Passing, z = Feeding)) +
  geom_point(
    aes(col =  paste(shark_in_video, size_class, sep = "_")),
    alpha = .1,
    stroke = 0,
    size = 2.5
  ) +
  
  stat_confidence_tern(
    aes(group = shark_in_video),
    col = "white",
    linetype = "11",
    breaks = c(0.95),
    show.legend = F
  ) +
  labs(
    x = "",
    xarrow  = "Investigating-Circling",
    y = "",
    yarrow  = "Passing",
    z = "",
    zarrow  = "Feeding"
  ) +
  scale_colour_manual(values = cols_sharks,
                      labels = c("absent", "absent", "present", "present")) +
  guides(color = guide_legend(override.aes = list(alpha = 1), title = "Shark")) +
  facet_grid(factor(size_class, levels = c("Small", "Medium")) ~ year) +
  theme_tern_clean(); plot_fractions_tenary_SM


```

```{r}
ggsave(filename = "bahavior_fractions_SM_tenary.pdf",
       plot = plot_fractions_tenary_SM, 
       path = here("plots"),
       width = 18, height = 15, units = "cm")
```

##### Conditional effects for shark_in_video per year and size_class

not possible with `emmeans()` for Dirichlet

```{r}
epred_frac_SM %>% 
  pivot_wider(names_from = "shark_in_video", values_from = ".epred") %>% 
  mutate(contrast = "absent - present",
         .value = absent - present) %>% 
  group_by(contrast, size_class, year, type) %>%
  median_hdi(.value) %>% 
  mutate(important = ifelse(.upper > 0 & .lower > 0 |
                       .upper < 0 & .lower < 0, "*","")) %>% 
  select(-.width, -.point, -.interval) %>% 
  mutate_if(is.numeric, txtRound,2) %>% 
  arrange(desc(size_class)) %>% 
  htmlTable(rnames = FALSE)
```

##### Conditional effects for habitat and type

```{r}
epred_frac_SM_habitat <- epred_draws(
  fit_frac_SM,
  newdata = expand_grid(
    year = dat_frac_SM$year %>% unique(),
    shark_in_video = dat_frac_SM$shark_in_video %>% unique(),
    size_class = c("Small", "Medium"),
    habitat = dat_frac_SM$habitat %>% unique(),
    log_depth = mean(dat_frac_SM$depth) %>%
      log(),
    log_n_frame_total = mean(dat_frac_SM$n_frame_total) %>%
      log()
  ),
  re_formula = NA
) %>%
  #average over habitat
  group_by(habitat,
           .category,
           .draw) %>%
  summarise(.epred = mean(.epred)) %>%
  rename("type" = ".category") %>%
  mutate(
    type = recode(
      type,
      "frac_feedingT" = "Feeding",
      "frac_passingT" = "Passing",
      "frac_investigating_circlingT" = "Investigating-Circling"
    )
  ) %>%  
  pivot_wider(names_from = "habitat", values_from = ".epred") %>% 
  mutate(contrast = "near reef - reef",
         .value = `near reef` - reef) 

#Table
epred_frac_SM_habitat %>% 
  group_by(contrast, type) %>%
  median_hdi(.value) %>% 
  mutate(important = ifelse(.upper > 0 & .lower > 0 |
                       .upper < 0 & .lower < 0, "*","")) %>% 
  select(-.width, -.point, -.interval) %>% 
  mutate_if(is.numeric, txtRound,2) %>% 
  htmlTable(rnames = FALSE)

#Plot
epred_frac_SM_habitat %>% 
  ggplot()+
  geom_hline(yintercept = 0, linetype = "11")+
  stat_pointinterval(
    aes(y = .value, x = type),
    point_interval = mode_hdi,
    .width = c(.95, .89),
    position = position_dodge(width = .7),
    show.legend = F
  )+
  theme_clean()

```

No effect

##### Conditional effects for n fish in frame

```{r}
epred_frac_SM_ntotal <- epred_draws(
  fit_frac_SM,
  newdata = expand_grid(
    year = dat_frac_SM$year %>% unique(),
    shark_in_video = dat_frac_SM$shark_in_video %>% unique(),
    size_class = c("Small", "Medium"),
    habitat = dat_frac_SM$habitat %>% unique(),
    log_depth = mean(dat_frac_SM$depth) %>%
      log(),
    log_n_frame_total = seq(min(dat_frac_SM$n_frame_total),
                            max(dat_frac_SM$n_frame_total),
                            length = 100) %>%
      log()
  ),
  re_formula = NA
) %>%
  group_by(.category,
           log_n_frame_total,
           .draw) %>%
  summarise(.epred = mean(.epred)) %>%
  rename("type" = ".category") %>%
  mutate(
    type = recode(
      type,
      "frac_feedingT" = "Feeding",
      "frac_passingT" = "Passing",
      "frac_investigating_circlingT" = "Investigating-Circling"
    )
  ) 
plot_epred_frac_SM_ntotal <- ggplot(data = dat_fracL_SM, aes(x = log_n_frame_total, col = type))+
  stat_lineribbon(data = epred_frac_SM_ntotal,
                  aes(y = .epred),
                  .width = c(.95),
                  fill = "lightblue", show.legend = F)+
  geom_point(aes(y = frac), alpha = .1)+
    facet_grid(~type)+
  labs(x = "log(n fish in frame)", y = "Fraction")+
  theme_clean()+
  theme(legend.position = "none")

plot_epred_SM_ntotal

ggsave(filename = "bahavior_fractions_SM_ntotal.pdf",
       plot = plot_epred_frac_SM_ntotal, 
       path = here("plots/SI"),
       width = 20, height = 15, units = "cm")
```

##### Conditional effects for depth

```{r}
epred_frac_SM_depth <- epred_draws(
  fit_frac_SM,
  newdata = expand_grid(
    year = dat_frac$year %>% unique(),
    shark_in_video = dat_frac$shark_in_video %>% unique(),
    size_class = c("Small", "Medium"),
    habitat = dat_frac$habitat %>% unique(),
    log_n_frame_total = mean(dat_frac$log_n_frame_total) %>%
      log(),
    log_depth = seq(min(dat_frac_SM$depth),
                            max(dat_frac_SM$depth),
                            length = 100) %>%
      log() 
  ),
  re_formula = NA
) %>%
  group_by(.category,
           log_depth,
           .draw) %>%
  summarise(.epred = mean(.epred)) %>%
  rename("type" = ".category") %>%
  mutate(
    type = recode(
      type,
      "frac_feedingT" = "Feeding",
      "frac_passingT" = "Passing",
      "frac_investigating_circlingT" = "Investigating-Circling"
    )
  ) 


plot_epred_frac_SM_depth <- ggplot(data = dat_fracL_SM, aes(x = log_depth, col = type))+
  stat_lineribbon(data = epred_frac_SM_depth,
                  aes(y = .epred),
                  .width = c(.95),
                  fill = "lightblue", show.legend = F)+
  geom_point(aes(y = frac), alpha = .1)+
    facet_grid(~type)+
  labs(x = "log(depth)", y = "Fraction")+
  theme_clean()+
  theme(legend.position = "none")

plot_epred_frac_SM_depth

ggsave(filename = "bahavior_fractions_SM_depth.pdf",
       plot = plot_epred_frac_SM_depth, 
       path = here("plots/SI"),
       width = 20, height = 15, units = "cm")
```

#### Large fish

A less complex model has to be used because number of observations low. Smoothing cannot be used because number of covariate combinations is too low

```{r}
fit_frac_L <- brm(
  cbind(frac_investigating_circlingT, frac_passingT, frac_feedingT) ~
    year * shark_in_video +
    log_n_frame_total +
    habitat +
    log_depth +
    (1 | video),
  data = dat_frac_L,
  family =  dirichlet(),
  iter = 4000,
  warmup = 2000,
  chains = 4,
  cores = 4,
  seed = 123,
  control = list(max_treedepth = 12, adapt_delta = 0.99),
  file_refit = "on_change",
  threads = threading(2, static = T),
  file = here("models/fit_frac_L"),
  backend = "cmdstanr"
)
```

```{r}
summary(fit_frac_L)# OK
#plot(fit_frac_L) # OK
```

```{r}
dirichlet_r2(fit_frac_L)
```

frac_investigating_circlingT 0.1259942\
frac_passingT 0.1554619\
frac_feedingT 0.1038315

##### Plot Results for year shark_in_video size_class

Not yet possible with `emmeans` , get expected values manually

```{r}
epred_frac_L <-  epred_draws(
  fit_frac_L,
  newdata = expand_grid(
    year = dat_frac_L$year %>% unique(),
    shark_in_video = dat_frac_L$shark_in_video %>% unique(),
    habitat = dat_frac_L$habitat %>% unique(),
    log_depth = mean(dat_frac_L$depth) %>%
      log(),
    log_n_frame_total = mean(dat_frac_L$n_frame_total) %>%
      log()
  ),
  re_formula = NA
) %>%
  #average over habitat
  group_by(year,
           shark_in_video,
           log_depth,
           log_n_frame_total,
           .category,
           .draw) %>%
  summarise(.epred = mean(.epred)) %>%
  rename("type" = ".category") %>%
  mutate(
    type = recode(
      type,
      "frac_feedingT" = "Feeding",
      "frac_passingT" = "Passing",
      "frac_investigating_circlingT" = "Investigating-Circling"
    )
  )
```

Plot

```{r}
plot_frac_L <- ggplot(data = epred_frac_L, 
                                 aes(x = year, 
                                     col = shark_in_video)) +
  geom_point(
    data = dat_fracL_L,
    aes(y = frac),
    position =  position_jitterdodge(jitter.width = .2, dodge.width = .7),
    alpha = .1,
    size = 3,
    stroke = 0
  ) +
  stat_pointinterval(
    aes(y = .epred),
    point_interval = mode_hdi,
    .width = c(.95, .89),
    position = position_dodge(width = .7),
    show.legend = F
  ) +
  scale_colour_manual(values = cols_sharks_L,
                      labels = c("absent", "present")) +
  guides(color = guide_legend(override.aes = list(alpha = 1), title = "Shark")) +
  labs(x = NULL, y = "Fraction") +
  facet_grid( ~ type, scales = "free") +
  theme_clean(); plot_frac_L
```

Save

```{r}
ggsave(filename = "bahavior_fractions_L.pdf",
       plot = plot_frac_L, 
       path = here("plots/SI"),
       width = 18, height = 7, units = "cm")
```

As tenary plot

```{r}

plot_fractions_tenary_L <- epred_frac_L %>%
  pivot_wider(names_from = type, values_from = .epred) %>%
  ggtern(aes(x = `Investigating-Circling`, y = Passing, z = Feeding)) +
  geom_point(
    aes(col =  shark_in_video),
    alpha = .1,
    stroke = 0,
    size = 2.5
  ) +
  
  stat_confidence_tern(
    aes(group = shark_in_video),
    col = "white",
    linetype = "11",
    breaks = c(0.95),
    show.legend = F
  ) +
  labs(
    x = "",
    xarrow  = "Investigating-Circling",
    y = "",
    yarrow  = "Passing",
    z = "",
    zarrow  = "Feeding"
  ) +
  scale_colour_manual(values = cols_sharks_L,
                      labels = c("absent", "present")) +
  guides(color = guide_legend(override.aes = list(alpha = 1), title = "Shark")) +
  facet_grid(~ year) +
  theme_tern_clean(); plot_fractions_tenary_L


```

```{r}
ggsave(filename = "bahavior_fractions_L_tenary.pdf",
       plot = plot_fractions_tenary_L, 
       path = here("plots/SI"),
       width = 18, height = 7, units = "cm")
```

##### Conditional effects for shark_in_video per year

not possible with `emmeans()` for Dirichlet

```{r}
epred_frac_L %>% 
  pivot_wider(names_from = "shark_in_video", values_from = ".epred") %>% 
  mutate(contrast = "absent - present",
         .value = absent - present) %>% 
  group_by(contrast, year, type) %>%
  median_hdi(.value) %>% 
  mutate(important = ifelse(.upper > 0 & .lower > 0 |
                       .upper < 0 & .lower < 0, "*","")) %>% 
  select(-.width, -.point, -.interval) %>% 
  mutate_if(is.numeric, txtRound,2) %>% 
  htmlTable(rnames = FALSE)
```

##### Conditional effects for habitat and type

```{r}
epred_frac_L_habitat <- epred_draws(
  fit_frac_L,
  newdata = expand_grid(
    year = dat_frac_L$year %>% unique(),
    shark_in_video = dat_frac_L$shark_in_video %>% unique(),
    habitat = dat_frac_L$habitat %>% unique(),
    log_depth = mean(dat_frac_L$depth) %>%
      log(),
    log_n_frame_total = mean(dat_frac_L$n_frame_total) %>%
      log()
  ),
  re_formula = NA
) %>%
  #average over habitat
  group_by(habitat,
           .category,
           .draw) %>%
  summarise(.epred = mean(.epred)) %>%
  rename("type" = ".category") %>%
  mutate(
    type = recode(
      type,
      "frac_feedingT" = "Feeding",
      "frac_passingT" = "Passing",
      "frac_investigating_circlingT" = "Investigating-Circling"
    )
  ) %>%  
  pivot_wider(names_from = "habitat", values_from = ".epred") %>% 
  mutate(contrast = "near reef - reef",
         .value = `near reef` - reef) 

#Table
epred_frac_L_habitat %>% 
  group_by(contrast, type) %>%
  median_hdi(.value) %>% 
  mutate(important = ifelse(.upper > 0 & .lower > 0 |
                       .upper < 0 & .lower < 0, "*","")) %>% 
  select(-.width, -.point, -.interval) %>% 
  mutate_if(is.numeric, txtRound,2) %>% 
  htmlTable(rnames = FALSE)

#Plot
epred_frac_L_habitat %>% 
  ggplot()+
  geom_hline(yintercept = 0, linetype = "11")+
  stat_pointinterval(
    aes(y = .value, x = type),
    point_interval = mode_hdi,
    .width = c(.95, .89),
    position = position_dodge(width = .7),
    show.legend = F
  )+
  theme_clean()

```

No effect

##### Conditional effects for n fish in frame

```{r}
epred_frac_L_ntotal <- epred_draws(
  fit_frac_L,
  newdata = expand_grid(
    year = dat_frac_L$year %>% unique(),
    shark_in_video = dat_frac_L$shark_in_video %>% unique(),
    habitat = dat_frac_L$habitat %>% unique(),
    log_depth = mean(dat_frac_L$depth) %>%
      log(),
    log_n_frame_total = seq(min(dat_frac_L$n_frame_total),
                            max(dat_frac_L$n_frame_total),
                            length = 100) %>%
      log()
  ),
  re_formula = NA
) %>%
  group_by(.category,
           log_n_frame_total,
           .draw) %>%
  summarise(.epred = mean(.epred)) %>%
  rename("type" = ".category") %>%
  mutate(
    type = recode(
      type,
      "frac_feedingT" = "Feeding",
      "frac_passingT" = "Passing",
      "frac_investigating_circlingT" = "Investigating-Circling"
    )
  ) 
plot_epred_frac_L_ntotal <- ggplot(data = dat_fracL_L, aes(x = log_n_frame_total, col = type))+
  stat_lineribbon(data = epred_frac_L_ntotal,
                  aes(y = .epred),
                  .width = c(.95),
                  fill = "lightblue", show.legend = F)+
  geom_point(aes(y = frac), alpha = .1)+
    facet_grid(~type)+
  labs(x = "log(n fish in frame)", y = "Fraction")+
  theme_clean()+
  theme(legend.position = "none")

plot_epred_frac_L_ntotal

ggsave(filename = "bahavior_fractions_L_ntotal.pdf",
       plot = plot_epred_frac_L_ntotal, 
       path = here("plots/SI"),
       width = 20, height = 15, units = "cm")
```

##### Conditional effects for depth

```{r}
epred_frac_L_depth <- epred_draws(
  fit_frac_L,
  newdata = expand_grid(
    year = dat_frac$year %>% unique(),
    shark_in_video = dat_frac$shark_in_video %>% unique(),
    habitat = dat_frac$habitat %>% unique(),
    log_n_frame_total = mean(dat_frac$log_n_frame_total) %>%
      log(),
    log_depth = seq(min(dat_frac_L$depth),
                            max(dat_frac_L$depth),
                            length = 100) %>%
      log() 
  ),
  re_formula = NA
) %>%
  group_by(.category,
           log_depth,
           .draw) %>%
  summarise(.epred = mean(.epred)) %>%
  rename("type" = ".category") %>%
  mutate(
    type = recode(
      type,
      "frac_feedingT" = "Feeding",
      "frac_passingT" = "Passing",
      "frac_investigating_circlingT" = "Investigating-Circling"
    )
  ) 


plot_epred_frac_L_depth <- ggplot(data = dat_fracL_L, aes(x = log_depth, col = type))+
  stat_lineribbon(data = epred_frac_L_depth,
                  aes(y = .epred),
                  .width = c(.95),
                  fill = "lightblue", show.legend = F)+
  geom_point(aes(y = frac), alpha = .1)+
    facet_grid(~type)+
  labs(x = "log(depth)", y = "Fraction")+
  theme_clean()+
  theme(legend.position = "none")

plot_epred_frac_L_depth

ggsave(filename = "bahavior_fractions_L_depth.pdf",
       plot = plot_epred_frac_L_depth, 
       path = here("plots/SI"),
       width = 20, height = 15, units = "cm")
```
